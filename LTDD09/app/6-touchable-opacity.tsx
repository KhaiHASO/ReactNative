import React, { useState } from 'react';
import { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';

export default function TouchableOpacityDemo() {
  const [lastPressed, setLastPressed] = useState<string | null>(null);

  const handlePress = (label: string) => {
    setLastPressed(label);
  };

  return (
    <ScrollView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <Text style={styles.title}>ü´ß TouchableOpacity Demo</Text>
        <Text style={styles.subtitle}>
          Button ƒë∆°n gi·∫£n v·ªõi hi·ªáu ·ª©ng m·ªù d·∫ßn (fade) khi nh·∫•n
        </Text>
      </View>

      {/* 1. C∆° b·∫£n */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>1. Button c∆° b·∫£n</Text>
        <TouchableOpacity
          style={styles.primaryButton}
          onPress={() => handlePress('Primary')}
          activeOpacity={0.6}
        >
          <Text style={styles.primaryButtonText}>Nh·∫•n t√¥i</Text>
        </TouchableOpacity>
      </View>

      {/* 2. K√≠ch th∆∞·ªõc kh√°c nhau */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>2. K√≠ch th∆∞·ªõc kh√°c nhau</Text>
        <View style={styles.row}>
          <TouchableOpacity style={[styles.sizeButton, styles.small]} onPress={() => handlePress('Small')}>
            <Text style={styles.sizeText}>Nh·ªè</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.sizeButton, styles.medium]} onPress={() => handlePress('Medium')}>
            <Text style={styles.sizeText}>Trung b√¨nh</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.sizeButton, styles.large]} onPress={() => handlePress('Large')}>
            <Text style={styles.sizeText}>L·ªõn</Text>
          </TouchableOpacity>
        </View>
      </View>

      {/* 3. M√†u s·∫Øc */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>3. M√†u s·∫Øc</Text>
        <View style={styles.row}>
          <TouchableOpacity style={[styles.colorButton, { backgroundColor: '#F44336' }]} onPress={() => handlePress('ƒê·ªè')}>
            <Text style={styles.colorText}>ƒê·ªè</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.colorButton, { backgroundColor: '#4CAF50' }]} onPress={() => handlePress('Xanh l√°')}>
            <Text style={styles.colorText}>Xanh l√°</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.colorButton, { backgroundColor: '#2196F3' }]} onPress={() => handlePress('Xanh d∆∞∆°ng')}>
            <Text style={styles.colorText}>Xanh d∆∞∆°ng</Text>
          </TouchableOpacity>
        </View>
      </View>

      {/* 4. Disabled state */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>4. Disabled state</Text>
        <View style={styles.row}>
          <TouchableOpacity style={styles.enabledButton} onPress={() => handlePress('Enabled')}>
            <Text style={styles.enabledText}>Enabled</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.disabledButton} disabled>
            <Text style={styles.disabledText}>Disabled</Text>
          </TouchableOpacity>
        </View>
      </View>

      {/* 5. L·∫ßn nh·∫•n g·∫ßn nh·∫•t */}
      <View style={styles.section}>
        <Text style={styles.sectionTitle}>5. L·∫ßn nh·∫•n g·∫ßn nh·∫•t</Text>
        <Text style={styles.preview}>
          {lastPressed ? `B·∫°n v·ª´a nh·∫•n: ${lastPressed}` : 'Ch∆∞a c√≥ t∆∞∆°ng t√°c'}
        </Text>
      </View>

      {/* Tips */}
      <View style={styles.infoSection}>
        <Text style={styles.infoTitle}>üí° Tips</Text>
        <Text style={styles.infoText}>
          ‚Ä¢ D√πng activeOpacity ~0.6 ƒë·ªÉ c√≥ hi·ªáu ·ª©ng t·ª± nhi√™n{"\n"}
          ‚Ä¢ Lu√¥n ƒë·∫£m b·∫£o k√≠ch th∆∞·ªõc t·ªëi thi·ªÉu 44px cho accessibility{"\n"}
          ‚Ä¢ V·ªõi logic ph·ª©c t·∫°p, c√¢n nh·∫Øc d√πng Pressable thay th·∫ø
        </Text>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  header: {
    backgroundColor: '#8E24AA',
    padding: 20,
    marginBottom: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: 'white',
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 16,
    color: 'white',
    textAlign: 'center',
    marginTop: 8,
  },
  section: {
    margin: 16,
    backgroundColor: 'white',
    borderRadius: 8,
    padding: 16,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 12,
  },
  primaryButton: {
    backgroundColor: '#7B1FA2',
    paddingVertical: 12,
    paddingHorizontal: 24,
    borderRadius: 8,
    alignItems: 'center',
  },
  primaryButtonText: {
    color: 'white',
    fontWeight: 'bold',
    fontSize: 16,
  },
  row: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
    gap: 8,
  },
  sizeButton: {
    backgroundColor: '#CE93D8',
    borderRadius: 8,
    paddingHorizontal: 12,
    alignItems: 'center',
  },
  small: { paddingVertical: 6 },
  medium: { paddingVertical: 10 },
  large: { paddingVertical: 14 },
  sizeText: { color: 'white', fontWeight: 'bold' },
  colorButton: {
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 8,
    minWidth: 90,
    alignItems: 'center',
  },
  colorText: { color: 'white', fontWeight: 'bold' },
  enabledButton: {
    backgroundColor: '#4CAF50',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 8,
  },
  enabledText: { color: 'white', fontWeight: 'bold' },
  disabledButton: {
    backgroundColor: '#CCCCCC',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 8,
  },
  disabledText: { color: '#666', fontWeight: 'bold' },
  preview: {
    fontSize: 16,
    color: '#333',
  },
  infoSection: {
    margin: 16,
    backgroundColor: '#F3E5F5',
    borderRadius: 8,
    padding: 16,
    borderLeftWidth: 4,
    borderLeftColor: '#8E24AA',
  },
  infoTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#6A1B9A',
    marginBottom: 12,
  },
  infoText: {
    fontSize: 14,
    color: '#424242',
    lineHeight: 20,
  },
});


